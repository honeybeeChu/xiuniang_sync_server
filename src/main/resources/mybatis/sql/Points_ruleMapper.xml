<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sync.mybatis.mapper.Points_ruleMapper" >
  <resultMap id="BaseResultMap" type="com.sync.mybatis.model.Points_rule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="consumption" property="consumption" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="trade_num" property="tradeNum" jdbcType="INTEGER" />
    <result column="once_consumption" property="onceConsumption" jdbcType="INTEGER" />
    <result column="conditions" property="conditions" jdbcType="INTEGER" />
    <result column="rate" property="rate" jdbcType="REAL" />
    <result column="discount" property="discount" jdbcType="REAL" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, level, consumption, name, trade_num, once_consumption, conditions, rate, discount, 
    created_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from points_rules
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="getPointsRuleCount" resultType="java.lang.Integer">
		select
		count(1)
		from points_rules
	</select>
	<select id="selectAllRules" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from points_rules
		order by level desc
	</select>
	<select id="selectByLevel" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from points_rules
		where level = #{0} limit 1
	</select>
    <select id="selectPointsRuleByLevel" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from points_rules
		where level = #{0}
	</select>
	
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from points_rules
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sync.mybatis.model.Points_rule" >
    insert into points_rules (id, level, consumption, 
      name, trade_num, once_consumption, 
      conditions, rate, discount, 
      created_at)
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{consumption,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{tradeNum,jdbcType=INTEGER}, #{onceConsumption,jdbcType=INTEGER}, 
      #{conditions,jdbcType=INTEGER}, #{rate,jdbcType=REAL}, #{discount,jdbcType=REAL}, 
      #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sync.mybatis.model.Points_rule" >
    insert into points_rules
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="consumption != null" >
        consumption,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="tradeNum != null" >
        trade_num,
      </if>
      <if test="onceConsumption != null" >
        once_consumption,
      </if>
      <if test="conditions != null" >
        conditions,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="consumption != null" >
        #{consumption,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tradeNum != null" >
        #{tradeNum,jdbcType=INTEGER},
      </if>
      <if test="onceConsumption != null" >
        #{onceConsumption,jdbcType=INTEGER},
      </if>
      <if test="conditions != null" >
        #{conditions,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=REAL},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=REAL},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sync.mybatis.model.Points_rule" >
    update points_rules
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="consumption != null" >
        consumption = #{consumption,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tradeNum != null" >
        trade_num = #{tradeNum,jdbcType=INTEGER},
      </if>
      <if test="onceConsumption != null" >
        once_consumption = #{onceConsumption,jdbcType=INTEGER},
      </if>
      <if test="conditions != null" >
        conditions = #{conditions,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=REAL},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=REAL},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sync.mybatis.model.Points_rule" >
    update points_rules
    set level = #{level,jdbcType=INTEGER},
      consumption = #{consumption,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      trade_num = #{tradeNum,jdbcType=INTEGER},
      once_consumption = #{onceConsumption,jdbcType=INTEGER},
      conditions = #{conditions,jdbcType=INTEGER},
      rate = #{rate,jdbcType=REAL},
      discount = #{discount,jdbcType=REAL},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>